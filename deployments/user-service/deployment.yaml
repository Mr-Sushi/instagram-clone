apiVersion: v1
kind: Service
metadata:
  name: user-service
  labels:
    app: user-service
spec:
  ports:
    - port: 3000
  selector:
    app: user-service
    tier: frontend
  clusterIP: None
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service
  labels:
    app: user-service
spec:
  selector:
    matchLabels:
      app: user-service
      tier: frontend
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: user-service
        tier: frontend
    spec:
      initContainers:
        - name: user-migrations
          image: ppeerttu/user-service-migrations:latest
          command: ['dbmate', 'migrate']
          env:
            - name: DATABASE_URL
              value: postgres://user-service:user-service@user-db-postgresql.default.svc.cluster.local:5432/user-service?sslmode=disable
      containers:
      - image: ppeerttu/user-service:latest
        name: user-service
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
        - containerPort: 8080
        resources:
          requests:
            cpu: "100m"
          limits:
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          failureThreshold: 3
        env:
        - name: POSTGRES_DB
          value: user-service
        - name: POSTGRES_USER
          value: user-service
        - name: POSTGRES_PASSWORD
          value: user-service
        - name: POSTGRES_PORT
          value: "5432"
        - name: POSTGRES_HOST
          value: user-db-postgresql.default.svc.cluster.local
        - name: CONSUL_HOST
          value: hashicorp-consul-server.default.svc.cluster.local
        - name: CONSUL_ENABLED
          value: "false"
        - name: GRPC_PORT
          value: "3000"
        - name: APP_ENV
          value: production
        - name: KAFKA_SERVERS
          value: kafka.default.svc.cluster.local:9092
        - name: KAFKA_ACCOUNTS_TOPIC
          value: accounts
        - name: KAFKA_USERS_TOPIC
          value: users
        - name: HTTP_PORT
          value: "8080"


